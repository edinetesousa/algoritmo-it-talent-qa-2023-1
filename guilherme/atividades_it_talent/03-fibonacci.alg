algoritmo "Nome do Programa"
    
    funcao fibonacci(n: inteiro): inteiro
    var
        valor_atual, valor_anterior, valor_proximo, i: inteiro
    inicio
        se n <= 1 entao
            retorne n
        senao
            valor_atual <- 1
            valor_anterior <- 0
            para i de 2 ate n faca
                valor_proximo <- valor_atual + valor_anterior
                valor_anterior <- valor_atual
                valor_atual <- valor_proximo
            fimpara
            retorne valor_atual
        fimse
        
    fimfuncao
var

inicio

    escreval("0º  : fib ", fibonacci(0) ,"       ->  ", (fibonacci(0) = 0))
    escreval("1º  : fib ", fibonacci(1) ,"       ->  ", (fibonacci(1) = 1))
    escreval("2º  : fib ", fibonacci(2) ,"       ->  ", (fibonacci(2) = 1))
    escreval("3º  : fib ", fibonacci(3) ,"       ->  ", (fibonacci(3) = 2))
    escreval("4º  : fib ", fibonacci(4) ,"       ->  ", (fibonacci(4) = 3))
    escreval("5º  : fib ", fibonacci(5) ,"       ->  ", (fibonacci(5) = 5))
    escreval("6º  : fib ", fibonacci(6) ,"       ->  ", (fibonacci(6) = 8))
    escreval("7º  : fib ", fibonacci(7) ,"       ->  ", (fibonacci(7) = 13))
    escreval("8º  : fib ", fibonacci(8) ,"       ->  ", (fibonacci(8) = 21))
    escreval("9º  : fib ", fibonacci(9) ,"       ->  ", (fibonacci(9) = 34))
    escreval("10º : fib ", fibonacci(10) ,"      ->  ", (fibonacci(10) = 55))
    escreval("11º : fib ", fibonacci(11) ,"      ->  ", (fibonacci(11) = 89))
    escreval("12º : fib ", fibonacci(12) ,"      ->  ", (fibonacci(12) = 144))

fimalgoritmo
